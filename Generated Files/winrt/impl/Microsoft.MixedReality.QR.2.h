// WARNING: Please don't edit this file. It was generated by C++/WinRT v2.0.220912.1

#pragma once
#ifndef WINRT_Microsoft_MixedReality_QR_2_H
#define WINRT_Microsoft_MixedReality_QR_2_H
#include "winrt/impl/Microsoft.MixedReality.QR.1.h"
WINRT_EXPORT namespace winrt::Microsoft::MixedReality::QR
{
    struct __declspec(empty_bases) QRCode : winrt::Microsoft::MixedReality::QR::IQRCode
    {
        QRCode(std::nullptr_t) noexcept {}
        QRCode(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::MixedReality::QR::IQRCode(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) QRCodeAddedEventArgs : winrt::Microsoft::MixedReality::QR::IQRCodeAddedEventArgs
    {
        QRCodeAddedEventArgs(std::nullptr_t) noexcept {}
        QRCodeAddedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::MixedReality::QR::IQRCodeAddedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) QRCodeRemovedEventArgs : winrt::Microsoft::MixedReality::QR::IQRCodeRemovedEventArgs
    {
        QRCodeRemovedEventArgs(std::nullptr_t) noexcept {}
        QRCodeRemovedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::MixedReality::QR::IQRCodeRemovedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) QRCodeUpdatedEventArgs : winrt::Microsoft::MixedReality::QR::IQRCodeUpdatedEventArgs
    {
        QRCodeUpdatedEventArgs(std::nullptr_t) noexcept {}
        QRCodeUpdatedEventArgs(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::MixedReality::QR::IQRCodeUpdatedEventArgs(ptr, take_ownership_from_abi) {}
    };
    struct __declspec(empty_bases) QRCodeWatcher : winrt::Microsoft::MixedReality::QR::IQRCodeWatcher
    {
        QRCodeWatcher(std::nullptr_t) noexcept {}
        QRCodeWatcher(void* ptr, take_ownership_from_abi_t) noexcept : winrt::Microsoft::MixedReality::QR::IQRCodeWatcher(ptr, take_ownership_from_abi) {}
        QRCodeWatcher();
        static auto IsSupported();
        static auto RequestAccessAsync();
    };
}
#endif
